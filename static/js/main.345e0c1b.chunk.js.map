{"version":3,"sources":["actions/types.js","utils/index.js","reducers/index.js","theme/index.js","constants/index.js","apis/mock-data.js","apis/index.js","actions/index.js","components/SearchBar.js","components/Header.js","pages/Home.js","components/Skeleton.js","components/Chart.js","components/Trends.js","components/Message.js","pages/Search.js","App.js","reportWebVitals.js","index.js"],"names":["KEYWORD_INPUTTED","KEYWORD_CLEARED","KEYWORD_FORMATTED","TRENDS_SEARCH_STARTED","TRENDS_SEARCH_FETCHED","TRENDS_SEARCH_FAILED","sanitizeKeyword","keyword","trim","split","join","formatKeyword","map","word","replace","formatTitle","title","index","includes","style","fontWeight","reduce","prev","curr","calcGrowth","product","startSV","search_msv","sv","length","toFixed","processMSV","array","newArray","slice","copySV","svc","formatDate","date","initialState","isLoading","productTrends","message","reducers","combineReducers","searchReducer","state","action","type","actions","payload","Utils","data","theme","createTheme","palette","background","default","primary","main","light","dark","contrastText","text","caption","CARD_DATE_FORMATE","mockData","product_trends","name","axios","defaults","baseURL","APIs","search","a","Promise","resolve","reject","setTimeout","updateKeyword","o","dispatch","input","clear","format","value","connect","history","useHistory","path","useLocation","pathname","useEffect","Box","component","onSubmit","e","preventDefault","formData","FormData","target","keywordInputS","get","push","sx","display","gap","flexGrow","OutlinedInput","onChange","placeholder","padding","Button","variant","color","borderColor","useStyles","makeStyles","root","backgroundColor","borderBottom","divider","breakpoints","up","maxWidth","toolbar","logoText","between","fontSize","down","logoIcon","fontFamily","lineHeight","borderRadius","Header","classes","AppBar","elevation","className","Toolbar","Typography","to","textDecoration","startsWith","Home","align","mt","mb","Skeleton","item","Grid","xs","sm","md","width","height","Chart","colorEven","colorOdd","conditionalFillFirst","fill","conditionalFillSecond","ResponsiveContainer","aspect","AreaChart","margin","top","right","bottom","left","Area","isAnimationActive","dataKey","stroke","connectNulls","position","header","growth","marginTop","chart","footer","textAlign","Trends","Paper","Message","Alert","severity","content","searchTrends","fetchTrends","then","res","catch","err","console","error","toString","useParams","keywordS","container","spacing","App","CssBaseline","Container","exact","Search","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","middleware","thunk","store","createStore","compose","applyMiddleware","ReactDOM","render","StrictMode","basename","process","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.345e0c1b.chunk.js","sourcesContent":["export const KEYWORD_INPUTTED = 'keyword/input'\nexport const KEYWORD_CLEARED = 'keyword/clear'\nexport const KEYWORD_FORMATTED = 'keyword/format'\n\nexport const TRENDS_SEARCH_STARTED = 'trends/search'\nexport const TRENDS_SEARCH_FETCHED = 'trends/fetch'\nexport const TRENDS_SEARCH_FAILED = 'trends/fail'\n","const sanitizeKeyword = (keyword) => keyword.trim().split(' ').join('+')\n\nconst formatKeyword = (keyword) =>\n  keyword\n    .split('+')\n    .map((word) => word.replace(/%2B/g, '+'))\n    .join(' ')\n    .trim()\n\n// Emphasize search keyword for product's title\nconst formatTitle = (title, keyword) =>\n  title\n    .split(' ')\n    .map((word, index) =>\n      keyword\n        .split('+')\n        .map((word) => word.replace(/%2B/g, '+'))\n        .includes(word) ? (\n        <span style={{ fontWeight: '400' }} key={index}>\n          {word}\n        </span>\n      ) : (\n        word\n      )\n    )\n    .reduce((prev, curr) => [prev, ' ', curr])\n\n// Calculate growth\nconst calcGrowth = (product) => {\n  const startSV = product.search_msv[0].sv\n  const finalSV = product.search_msv[product.search_msv.length - 1].sv\n\n  return (((finalSV - startSV) / startSV) * 100).toFixed(0)\n}\n\n// Process search_msv array for generating second area chart,\n// via https://recharts.org/en-US/api/Area#connectNulls\nconst processMSV = (array) => {\n  const newArray = array.slice()\n\n  // Add a new key \"svc\" with same value of \"sv\"\n  const copySV = (index) => (newArray[index].svc = newArray[index].sv)\n\n  // First item\n  copySV(0)\n  // Last item\n  copySV(newArray.length - 1)\n\n  return newArray\n}\n\n// Add leading zero to month for moment.js,\n// otherwise the result will be like \"Invalid date\" on iOS,\n// see https://momentjs.com/guides/#/warnings/js-date/\nconst formatDate = (date) =>\n  date.length !== 7 ? [date.slice(0, 5), 0, date.slice(5)].join('') : date\n\nexport {\n  sanitizeKeyword,\n  formatKeyword,\n  formatTitle,\n  calcGrowth,\n  processMSV,\n  formatDate,\n}\n","import { combineReducers } from 'redux'\nimport * as actions from '../actions/types'\nimport * as Utils from '../utils'\n\nconst initialState = {\n  isLoading: false,\n  keyword: '',\n  productTrends: [],\n  message: '',\n}\n\nconst searchReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.KEYWORD_INPUTTED:\n      return {\n        ...state,\n        keyword: action.payload.keyword,\n      }\n    case actions.KEYWORD_CLEARED:\n      return {\n        ...state,\n        keyword: '',\n      }\n    case actions.KEYWORD_FORMATTED:\n      return {\n        ...state,\n        keyword: Utils.formatKeyword(action.payload.keyword),\n      }\n\n    case actions.TRENDS_SEARCH_STARTED:\n      return {\n        ...state,\n        isLoading: true,\n        productTrends: [],\n        message: '',\n      }\n    case actions.TRENDS_SEARCH_FETCHED:\n      return {\n        ...state,\n        isLoading: false,\n        productTrends: action.payload.data,\n      }\n    case actions.TRENDS_SEARCH_FAILED:\n      return {\n        ...state,\n        isLoading: false,\n        productTrends: [],\n        message: action.payload.message,\n      }\n    default:\n      return state\n  }\n}\n\nconst reducers = combineReducers({\n  searchReducer,\n})\n\nexport { reducers }\n","import { createTheme } from '@mui/material/styles'\n\n// A custom theme for this app\nconst theme = createTheme({\n  palette: {\n    background: {\n      default: '#f9f4e8',\n    },\n    primary: {\n      main: '#212121',\n      light: '#484848',\n      dark: '#000',\n      contrastText: '#fff',\n    },\n    text: {\n      caption: 'rgba(0, 0, 0, 0.5)',\n    },\n  },\n})\n\nexport { theme }\n","const BESTSEARCH_BACKEND = 'http://3.141.23.218:5000/interview'\n\nconst CARD_DATE_FORMATE = 'MMM YYYY'\n\nexport { BESTSEARCH_BACKEND, CARD_DATE_FORMATE }\n","export const mockData = {\n  product_trends: [\n    {\n      name: 'Best Shoes',\n      search_msv: [\n        { date: '2015-9', sv: 161700 },\n        { date: '2015-10', sv: 169950 },\n        { date: '2021-6', sv: 353280 },\n        { date: '2021-7', sv: 250000 },\n      ],\n    },\n    {\n      name: 'Best House Shoes',\n      search_msv: [\n        { date: '2015-9', sv: 161700 },\n        { date: '2015-10', sv: 169950 },\n        { date: '2021-6', sv: 353280 },\n        { date: '2021-7', sv: 350000 },\n      ],\n    },\n    {\n      name: 'Best Running Shoes',\n      search_msv: [\n        { date: '2015-9', sv: 161700 },\n        { date: '2015-10', sv: 169950 },\n        { date: '2021-6', sv: 353280 },\n        { date: '2021-7', sv: 450000 },\n      ],\n    },\n    {\n      name: 'Best Hiking Shoes',\n      search_msv: [\n        { date: '2015-9', sv: 161700 },\n        { date: '2015-10', sv: 169950 },\n        { date: '2021-6', sv: 353280 },\n        { date: '2021-7', sv: 550000 },\n      ],\n    },\n    {\n      name: 'Best Cool Shoes',\n      search_msv: [\n        { date: '2015-9', sv: 161700 },\n        { date: '2015-10', sv: 169950 },\n        { date: '2021-6', sv: 353280 },\n        { date: '2021-7', sv: 650000 },\n      ],\n    },\n    {\n      name: 'Shoes+',\n      search_msv: [\n        { date: '2015-9', sv: 161700 },\n        { date: '2015-10', sv: 169950 },\n        { date: '2021-6', sv: 353280 },\n        { date: '2021-7', sv: 750000 },\n      ],\n    },\n  ],\n}\n","import axios from 'axios'\nimport { BESTSEARCH_BACKEND } from '../constants'\nimport { mockData } from './mock-data'\n\naxios.defaults.baseURL = BESTSEARCH_BACKEND\n\n// Real api\nconst searchReal = async (keyword) =>\n  await axios.post('/keyword_search', {\n    login_token: 'INTERVIEW_SIMPLY2021',\n    search_phrase: keyword,\n  })\n\n// Mock api\nconst searchMock = async (keyword) =>\n  await new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (keyword) {\n        resolve(mockData)\n      } else {\n        reject('Empty keyword!')\n      }\n    }, 4200)\n  })\n\nconst APIs = {\n  search: process.env.REACT_APP_ENV === 'mock' ? searchMock : searchReal,\n}\n\nexport { APIs }\n","import * as actions from './types'\nimport { APIs } from '../apis'\n\nexport const updateKeyword = (o) => (dispatch) => {\n  const actionMap = {\n    input: actions.KEYWORD_INPUTTED,\n    clear: actions.KEYWORD_CLEARED,\n    format: actions.KEYWORD_FORMATTED,\n  }\n\n  dispatch({\n    type: actionMap[o.type],\n    payload: {\n      keyword: o.value,\n    },\n  })\n}\n\nexport const searchTrends = (keyword) => (dispatch) => {\n  // console.log('searchTrends has been called.')\n\n  if (keyword) {\n    dispatch({\n      type: actions.TRENDS_SEARCH_STARTED,\n    })\n  } else {\n    // if keyword is empty\n    dispatch({\n      type: actions.TRENDS_SEARCH_FAILED,\n      payload: {\n        message: {\n          type: 'info',\n          content: 'No keyword was provided.',\n        },\n      },\n    })\n  }\n}\n\nexport const fetchTrends = (keyword) => async (dispatch) => {\n  APIs.search(keyword)\n    .then((res) => {\n      // console.log(res.product_trends)\n\n      dispatch({\n        type: actions.TRENDS_SEARCH_FETCHED,\n        payload: {\n          data: res.product_trends,\n        },\n      })\n    })\n    .catch((err) => {\n      console.error(err)\n\n      dispatch({\n        type: actions.TRENDS_SEARCH_FAILED,\n        payload: {\n          message: {\n            type: 'error',\n            content: err.toString(),\n          },\n        },\n      })\n    })\n}\n","import { useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { Box, OutlinedInput, Button } from '@mui/material'\nimport { Search as SearchIcon } from '@mui/icons-material'\nimport { connect } from 'react-redux'\nimport { updateKeyword } from '../actions'\nimport * as Utils from '../utils'\n\nconst SearchBar = ({ keyword, updateKeyword }) => {\n  const history = useHistory()\n  const location = useLocation()\n  const path = location.pathname\n\n  const handleChange = (e) => {\n    const keyword = e.target.value\n\n    updateKeyword({\n      type: 'input',\n      value: keyword,\n    })\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    const formData = new FormData(e.target)\n    const keywordInputS = Utils.sanitizeKeyword(\n      // Escape \"+\" to \"%2B\"\n      formData.get('keyword').replace(/\\+/g, '%2B')\n    )\n\n    // In homepage, do nothing if keyword is empty\n    if (path === '/' && !keywordInputS) return\n\n    history.push(`/search/${keywordInputS}`)\n  }\n\n  // Clear keyword on route change to homepage\n  useEffect(() => {\n    if (path === '/') {\n      updateKeyword({\n        type: 'clear',\n        value: '',\n      })\n    }\n  }, [path, updateKeyword])\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={handleSubmit}\n      sx={{\n        display: 'flex',\n        gap: '0.5em',\n        flexGrow: '1',\n      }}\n    >\n      <OutlinedInput\n        name=\"keyword\"\n        value={keyword}\n        onChange={handleChange}\n        placeholder=\"Search for new products in 961K stores\"\n        sx={{\n          flexGrow: 1,\n          '& .MuiOutlinedInput-input': { padding: '0.5em 1em' },\n        }}\n      />\n      <Button\n        type=\"submit\"\n        variant=\"outlined\"\n        sx={{\n          color: 'rgba(0, 0, 0, 0.54)',\n          borderColor: 'rgba(0, 0, 0, 0.23)',\n        }}\n      >\n        <SearchIcon />\n      </Button>\n    </Box>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  keyword: state.searchReducer.keyword,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateKeyword: (keyword) => dispatch(updateKeyword(keyword)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar)\n","import { Link, useLocation } from 'react-router-dom'\nimport { AppBar, Toolbar, Typography, Box } from '@mui/material'\nimport { makeStyles } from '@mui/styles'\nimport SearchBar from './SearchBar'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default + ' !important',\n    borderBottom: `1px solid ${theme.palette.divider}`,\n\n    // Search bar width\n    [theme.breakpoints.up('md')]: {\n      '& form': {\n        maxWidth: '75%',\n      },\n    },\n  },\n  toolbar: {\n    gap: '1em',\n  },\n  logoText: {\n    color: theme.palette.text.primary,\n    fontWeight: 300,\n    [theme.breakpoints.between('sm', 'md')]: {\n      fontSize: '1.1rem',\n    },\n    [theme.breakpoints.down('sm')]: {\n      display: 'none',\n    },\n  },\n  logoIcon: {\n    color: theme.palette.primary.contrastText,\n    background: theme.palette.primary.dark,\n    fontFamily: 'serif',\n    padding: '0.25em',\n    lineHeight: 1,\n    borderRadius: '3px',\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n}))\n\nconst Header = () => {\n  const location = useLocation()\n  const path = location.pathname\n\n  const classes = useStyles()\n\n  return (\n    <AppBar elevation={0} className={classes.root}>\n      <Toolbar className={classes.toolbar}>\n        <Typography component=\"h1\" variant=\"h6\">\n          <Link to=\"/\" style={{ color: 'inherit', textDecoration: 'none' }}>\n            <Box className={classes.logoText}>\n              <strong style={{ fontWeight: 500 }}>Best</strong>Search\n            </Box>\n            <Box className={classes.logoIcon}>ST</Box>\n          </Link>\n        </Typography>\n\n        {path.startsWith('/search') && <SearchBar />}\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default Header\n","import { Typography } from '@mui/material'\nimport SearchBar from '../components/SearchBar'\n\nconst Home = () => {\n  return (\n    <>\n      <Typography\n        component=\"h2\"\n        variant=\"h4\"\n        align=\"center\"\n        sx={{\n          fontSize: '2.5rem',\n          fontWeight: 300,\n          mt: '8rem',\n          mb: '4rem',\n        }}\n      >\n        Search Trends\n      </Typography>\n\n      <SearchBar />\n    </>\n  )\n}\n\nexport default Home\n","import { Grid, Skeleton as SkeletonMUI } from '@mui/material'\n\nconst Skeleton = () => {\n  return [1, 2, 3, 4].map((item) => (\n    <Grid item xs={12} sm={6} md={3} key={item}>\n      <SkeletonMUI variant=\"text\" width=\"75%\" />\n      <SkeletonMUI variant=\"text\" width=\"40%\" />\n      <SkeletonMUI variant=\"rectangular\" height={180} sx={{ mt: '0.5em' }} />\n    </Grid>\n  ))\n}\n\nexport default Skeleton\n","import { ResponsiveContainer, AreaChart, Area } from 'recharts'\nimport * as Utils from '../utils'\n\nconst Chart = ({ product, index }) => {\n  const colorEven = '141, 181, 213'\n  const colorOdd = '142, 198, 170'\n  const opacity = '0.6'\n\n  const conditionalFillFirst = {\n    fill: index % 2 === 0 ? `rgb(${colorEven})` : `rgb(${colorOdd})`,\n  }\n  const conditionalFillSecond = {\n    fill:\n      index % 2 === 0\n        ? `rgba(${colorEven}, ${opacity})`\n        : `rgba(${colorOdd}, ${opacity})`,\n  }\n\n  return (\n    <ResponsiveContainer width=\"100%\" aspect={1.618}>\n      <AreaChart\n        data={Utils.processMSV(product.search_msv)}\n        margin={{ top: 0, right: 0, bottom: 0, left: 0 }}\n      >\n        <Area\n          type=\"monotone\"\n          isAnimationActive={false}\n          dataKey=\"sv\"\n          stroke=\"none\"\n          {...conditionalFillFirst}\n        />\n\n        <Area\n          type=\"linear\"\n          isAnimationActive={false}\n          dataKey=\"svc\"\n          stroke=\"none\"\n          {...conditionalFillSecond}\n          connectNulls={true}\n        />\n      </AreaChart>\n    </ResponsiveContainer>\n  )\n}\n\nexport default Chart\n","import { Typography, Paper, Grid, Box } from '@mui/material'\nimport { makeStyles } from '@mui/styles'\nimport Chart from '../components/Chart'\nimport * as Utils from '../utils'\nimport { CARD_DATE_FORMATE } from '../constants'\nimport Moment from 'react-moment'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'relative',\n  },\n  header: {\n    position: 'absolute',\n    width: '100%',\n    padding: '1em',\n  },\n  title: {\n    fontWeight: '300 !important',\n  },\n  growth: {\n    color: theme.palette.text.caption,\n    fontSize: '0.85rem !important',\n    marginTop: '0.5rem !important',\n  },\n  chart: {\n    marginTop: '5rem',\n  },\n  footer: {\n    color: theme.palette.text.caption,\n    textAlign: 'center',\n    fontSize: '0.85rem !important',\n    padding: '0.5rem',\n  },\n}))\n\nconst Trends = ({ keyword, productTrends }) => {\n  const classes = useStyles()\n\n  return (\n    productTrends &&\n    productTrends.map((product, index) => (\n      <Grid item xs={12} sm={6} md={3} key={index}>\n        <Paper variant=\"outlined\" className={classes.root}>\n          <Box className={classes.header}>\n            <Typography component=\"h3\" variant=\"h6\" className={classes.title}>\n              {Utils.formatTitle(product.name, keyword)}\n            </Typography>\n            <Typography className={classes.growth}>\n              {`Growth ${Utils.calcGrowth(product)}%`}\n            </Typography>\n          </Box>\n\n          <Box className={classes.chart}>\n            <Chart product={product} index={index} />\n          </Box>\n\n          <Typography className={classes.footer}>\n            {/* Start date */}\n            <Moment\n              date={Utils.formatDate(product.search_msv[0].date)}\n              format={CARD_DATE_FORMATE}\n            />\n            {` - `}\n            {/* Final date */}\n            <Moment\n              date={Utils.formatDate(\n                product.search_msv[product.search_msv.length - 1].date\n              )}\n              format={CARD_DATE_FORMATE}\n            />\n          </Typography>\n        </Paper>\n      </Grid>\n    ))\n  )\n}\n\nexport default Trends\n","import { Alert } from '@mui/material'\n\nconst Message = ({ message }) => {\n  return <Alert severity={message.type}>{message.content}</Alert>\n}\n\nexport default Message\n","import { Typography, Grid } from '@mui/material'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { updateKeyword, fetchTrends, searchTrends } from '../actions'\nimport Skeleton from '../components/Skeleton'\nimport Trends from '../components/Trends'\nimport Message from '../components/Message'\nimport * as Utils from '../utils'\n\nconst Search = ({\n  isLoading,\n  productTrends,\n  updateKeyword,\n  searchTrends,\n  fetchTrends,\n  message,\n}) => {\n  const { keyword } = useParams()\n  const history = useHistory()\n\n  // Start search on page loaded\n  useEffect(() => {\n    // Update loading status\n    searchTrends(keyword)\n\n    const keywordS = keyword && Utils.sanitizeKeyword(keyword)\n\n    if (keywordS) {\n      if (keywordS !== keyword) {\n        // Redirect URL if keyword is not sanitized (from address bar)\n        history.push(`/search/${keywordS}`)\n      } else {\n        // Start request if keyword is sanitized already\n        fetchTrends(keyword)\n\n        // Update formatted keyword to store, since we don't want to\n        // display sanitized keyword in input for user\n        updateKeyword({\n          type: 'format',\n          value: keyword,\n        })\n      }\n    }\n  }, [keyword, history, updateKeyword, searchTrends, fetchTrends])\n\n  return (\n    <>\n      {message || !keyword ? (\n        <Message message={message} />\n      ) : (\n        <>\n          <Typography\n            component=\"h2\"\n            variant=\"h6\"\n            sx={{\n              fontWeight: 300,\n              mb: '1rem',\n            }}\n          >\n            Related product trends\n          </Typography>\n\n          <Grid container spacing={2}>\n            {isLoading ? (\n              <Skeleton />\n            ) : (\n              <Trends keyword={keyword} productTrends={productTrends} />\n            )}\n          </Grid>\n        </>\n      )}\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  isLoading: state.searchReducer.isLoading,\n  productTrends: state.searchReducer.productTrends,\n  message: state.searchReducer.message,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateKeyword: (keyword) => dispatch(updateKeyword(keyword)),\n  searchTrends: (keyword) => dispatch(searchTrends(keyword)),\n  fetchTrends: (keyword) => dispatch(fetchTrends(keyword)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search)\n","import { Switch, Route, Redirect } from 'react-router-dom'\nimport { Container, CssBaseline } from '@mui/material'\nimport Header from './components/Header'\nimport Home from './pages/Home'\nimport Search from './pages/Search'\n\nexport const App = () => {\n  return (\n    <>\n      <CssBaseline />\n      <Header />\n      <Container\n        component=\"main\"\n        maxWidth=\"md\"\n        sx={{\n          mt: '6em',\n          mb: '6em',\n        }}\n      >\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/search\" component={Search} />\n          <Route exact path=\"/search/:keyword\" component={Search} />\n\n          {/* 404 */}\n          <Route path=\"*\">\n            {/* <NoMatch /> */}\n            <Redirect to=\"/\" />\n          </Route>\n        </Switch>\n      </Container>\n    </>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport { reducers } from './reducers'\nimport { BrowserRouter } from 'react-router-dom'\nimport { ThemeProvider } from '@mui/material/styles'\nimport { theme } from './theme'\nimport { App } from './App'\nimport reportWebVitals from './reportWebVitals'\n\nconst initialState = {}\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducers,\n  initialState,\n  compose(\n    applyMiddleware(...middleware)\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter\n        basename={\n          process.env.NODE_ENV === 'production' ? process.env.PUBLIC_URL : '/'\n        }\n      >\n        <ThemeProvider theme={theme}>\n          <App />\n        </ThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}